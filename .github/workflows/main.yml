# https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions

name: Main
on:
  - pull_request # without merge conflicts
  - push # branch or tag

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  freebsd-vm:
    strategy:
      fail-fast: false
      matrix:
        include:
          - job_name: FreeBSD, memory=8G, run A
            memory: 8G
          - job_name: FreeBSD, memory=8G, run B
            memory: 8G
          - job_name: FreeBSD, memory=10G, run A
            memory: 10G
          - job_name: FreeBSD, memory=10G, run B
            memory: 10G
          - job_name: FreeBSD, memory=12G, run A
            memory: 12G
          - job_name: FreeBSD, memory=12G, run B
            memory: 12G
          - job_name: FreeBSD, memory=13G, run A
            memory: 13G
          - job_name: FreeBSD, memory=13G, run B
            memory: 13G
    name: ${{ matrix.job_name }}
    runs-on: macos-latest
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 50
      - name: Run in VM
        uses: cross-platform-actions/action@v0.21.0
        with:
          operating_system: freebsd
          hypervisor: qemu
          memory: ${{ matrix.memory }}
          sync_files: runner-to-vm
          version: '13.2'
          shell: bash
          run: |
            set -uexo pipefail

            freebsd_version='13.2'
            freebsd_major="${freebsd_version:0:2}"

            export OS_NAME=freebsd
            export MODEL=64
            export HOST_DMD=dmd
            export N=3
            export FULL_BUILD=true
            export CI_DFLAGS="-version=TARGET_FREEBSD${freebsd_major}"

            #if [[ "$freebsd_major" == 12 ]]; then
            #  sudo sed -i '' -e 's|pkg.FreeBSD.org|mirrors.xtom.com/freebsd-pkg|' /etc/pkg/FreeBSD.conf
            #fi

            bash --version

            echo '::group::Install prerequisites'
            sudo -E ci/cirrusci.sh
            echo '::endgroup::'

            echo '::group::Install host compiler'
            ci/run.sh install_host_compiler
            echo '::endgroup::'

            echo '::group::Set up repos'
            ln -s "$PWD" ../dmd

            ref='${{ github.ref }}'
            if [[ "$ref" =~ ^refs/pull/ ]]; then
              REPO_BRANCH="$GITHUB_BASE_REF"
            elif [[ "$ref" =~ ^refs/(heads|tags)/(.*)$ ]]; then
              REPO_BRANCH="${BASH_REMATCH[2]}"
            else
              echo "Error: unexpected GitHub ref '$ref'" >&2
              exit 1
            fi

            ci/run.sh setup_repos "$REPO_BRANCH"
            echo '::endgroup::'

            echo '::group::Build'
            ci/run.sh build
            echo '::endgroup::'

            echo '::group::Test dmd'
            ci/run.sh test_dmd
            echo '::endgroup::'

            echo '::group::Test druntime'
            ci/run.sh test_druntime
            echo '::endgroup::'

            echo '::group::Test phobos'
            ci/run.sh test_phobos
            echo '::endgroup::'
