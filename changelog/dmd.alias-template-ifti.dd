IFTI works with alias template parameters.

The alias declaration should contain and end with only one `TemplateInstance` that uses all alias template parameters.

---
struct S(T)
{
}

alias A(T) = S!T;
void f(T)(A!T)
{
}

struct C(T)
{
    struct D(U)
    {
    }

    struct E
    {

    }
}

struct G
{
    struct H(U)
    {

    }
}

alias CD(T, U) = C!T.D!U;
alias CE(T) = C!T.E;
alias GH(T) = G.H!T;

void f(T, U)(CD!(T, U))
{
}

void g(T)(CE!T)
{
}

void h(T)(GH!T)
{
}

void main()
{
    A!int a;
    f(a); // OK
    static assert(is(A!int == A!U, U)); // OK

    CD!(int, char) cd;
    CE!int ce;
    // f(cd); // error
    // g(ce); // error

    GH!float gh;
    h(gh); // OK
}
---
