`memcmp()` compares are no longer performed for struct equality tests, memberwise comparisons are done instead, per the spec

The compiler would sometimes generate code for struct equality tests using
`memcmp()` across the whole struct object. This assumed that:

$(OL
$(LI alignment holes were filled with 0, which is not always the case)
$(LI there were no floating point NaN values, which should compare as not equal
even if the bit patterns match)
)

The spec requires that the comparison be done in a memberwise manner.
This brings the implementation in line with this.

$(LINK2 https://dlang.org/spec/expression.html#equality_expressions, Equality Expressions)

This can break existing code that relied on the former erroneous behavior.
To correct such code, use one of the following:

$(OL
$(LI define an `opEquals()` operator overload to achieve the desired behavior)
$(LI use `is` instead of `==`, as `is` will do a bit compare of the struct object.)
)

This new behavior is enabled with the `-preview=fieldwise` compiler switch. It
will eventually become the default behavior.
