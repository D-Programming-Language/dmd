Improvements for the C++ header generation

The following features/bugfixes/improvements were implemented for the
experimental C++ header generator:

- Declarations from template mixins are emitted into the instantation context
- (Superclass) methods aliases are emitted as `using ...` instead of `typedef ...`
- `extern(D)` symbols are no longer emitted by accident in certain situations
- `extern(D)` structs and classes are emitted if referenced by an exported symbol
- Renamed imports are emitted as `using ...`
- Complex types are emitted as `_Complex`.
- Initializers of `union` variables/parameters omit non-active members
- Typecasts are emitted as C style, not D's `cast(...) ...`
- Structs are always tagged as `final` because D disallows `struct` inheritance

Note: The header generator is still considerer experimental, so please submit
      any bugs encountered to [the bug tracker](https://issues.dlang.org).
