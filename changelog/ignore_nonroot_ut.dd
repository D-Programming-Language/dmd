Ignore unittests in non-root modules

This mainly means that unittests *inside templates* are now only instantiated if
the module lexically declaring the template is one of the root modules.

E.g., compiling some project with `-unittest` does NOT compile and later run any
unittests in instantiations of templates declared in other libraries anymore.

Declaring unittests *inside* templates is considered an anti-pattern. In almost
all cases, the unittests don't depend on the template parameters, but
instantiate the template with fixed arguments (e.g., `Nullable!T` unittests
instantiating `Nullable!int`), so compiling and running identical tests for each
template instantiation is hardly desirable.
But adding a unittest right below some function being tested is arguably good
for locality, so unittests end up inside templates.

To make sure a template's unittests are run, it should be instantiated in the
same module, e.g., some module-level unittest.

This change paved the way for a more straight-forward template emission
algorithm without `-unittest` special cases, showing significant compile-time
improvements for some projects. `-allinst` now emits all templates instantiated
in root modules.
