Turn deprecation into error for selectively imported symbols in imported modules.

With this release DMD will issue an error when a symbol that is privately and selectively imported in `module A` is accessed in `module B` that imports `module A` non-selectively. Example:

---
// a.d
import fun : foo;

// b.d
import a;

void main()
{
    foo();     // deprecation up until now; error from now on
}
---

To make the above code compile, the import in `a.d` needs to be made `public`.
