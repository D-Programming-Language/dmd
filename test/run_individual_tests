#!/usr/bin/env bash
# Allows running tests individually
# Usage:
#   ./run_individual_tests <test-file>...
# Example:
#   ./run_individual_tests runnable/template2962.d fail_compilation/fail282.d

# See the Makefile for all available test targets

set -euo pipefail

# if PROCS is not set, auto-detect or fallback to 4
PROCS="${PROCS:-$(nproc 2> /dev/null || sysctl -n hw.physicalcpu 2> /dev/null || echo 4)}"
# path to the test directory
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

if [ -z ${1:-} ] ; then
    cat >&2 << EOF
./run_individual_tests <test-file>...

Examples:

    ./run_individual_tests runnable/template2962.d
    ./run_individual_tests runnable/template2962.d fail_compilation/fail282.d
EOF
    exit
fi

# all test files to be run
files=()

# normalize path to each test file
for arg in "$@" ; do
    file="$arg"
    # allow to use either:
    # - an existing path to the test file (e.g. cd test/runnable && ../run_individual_tests template2962.d)
    # - the test's slug (test directory + filename - e.g. src && ../test/run_individual_tests runnable/template2962.d)
    if [ -f $file ] ; then
        normalizedDir=$(cd "$(dirname "$file")" && pwd)
    else
        normalizedDir=$(cd "$DIR/$(dirname "$file")" && pwd)
    fi
    files+=("test_results/$(basename "$normalizedDir" )/$(basename "$file").out")
done

# allows the script to be called from anywhere
cd $DIR
${MAKE:-make} "${files[@]}" -j${PROCS}
